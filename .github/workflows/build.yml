name: Build and Release

on:
  workflow_dispatch:
  push:
    tags:
      - 'v*.*.*' # Trigger only on version tags like v1.2.3

jobs:
  build_and_release:
    name: Build & Release
    runs-on: ubuntu-latest
    permissions:
      contents: write # Required to create a release and upload assets

    strategy:
      matrix:
        # Define build targets for different platforms
        include:
          - target: linux-x64
            asset_name: OpenSSH-GUI-linux-x64.bin
            asset_content_type: application/octet-stream
          - target: win-x64
            asset_name: OpenSSH-GUI-win-x64.exe
            asset_content_type: application/vnd.microsoft.portable-executable
          - target: osx-x64
            asset_name: OpenSSH-GUI-osx-x64.bin
            asset_content_type: application/octet-stream

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x' # Updated .NET version

      # Cache NuGet packages to speed up subsequent builds
      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-dotnet-${{ hashFiles('**/*.csproj') }}
          restore-keys: |
            ${{ runner.os }}-dotnet-

      # Restore, build, and publish the application for the specific target
      - name: Publish application
        id: publish
        run: |
          # Use a variable for the output path to avoid repetition
          ARTIFACT_DIR="artifacts/${{ matrix.target }}"
          dotnet publish OpenSSH_GUI/OpenSSH_GUI.csproj \
            --configuration Release \
            --runtime ${{ matrix.target }} \
            --output "${ARTIFACT_DIR}" \
            -p:PublishSingleFile=true \
            -p:PublishReadyToRun=true \
            -p:IncludeNativeLibrariesForSelfExtract=true
          
          # Set the artifact path as an output for the upload step
          echo "artifact_path=${ARTIFACT_DIR}" >> $GITHUB_OUTPUT

      # Create a single release and upload all artifacts from the matrix builds
      - name: Release with artifacts
        uses: softprops/action-gh-release@v2
        with:
          # Use the output from the publish step to find the files
          files: |
            ${{ steps.publish.outputs.artifact_path }}/*
          # Automatically generate the release body from commits
          generate_release_notes: true
// <auto-generated />
using System;
using System.ComponentModel.DataAnnotations;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OpenSSH_GUI.Core.Database.Context;

#nullable disable

namespace OpenSSH_GUI.Core.Database.Migrations
{
    [DbContext(typeof(OpenSshGuiDbContext))]
    [Migration("20240517101119_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.5");

            modelBuilder.Entity("OpenSSH_GUI.Core.Database.DTO.SshKeyDto", b =>
                {
                    b.Property<string>("AbsolutePath")
                        .HasColumnType("TEXT");

                    b.Property<int>("Format")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Password")
                        .HasColumnType("TEXT");

                    b.HasKey("AbsolutePath");

                    b.ToTable("KeyDtos");
                });

            modelBuilder.Entity("OpenSSH_GUI.Core.Lib.Credentials.ConnectionCredentials", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AuthType")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Hostname")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("SettingsFileId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("SettingsFileId");

                    b.ToTable("ConnectionCredentials");
                });

            modelBuilder.Entity("OpenSSH_GUI.Core.Lib.Settings.SettingsFile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("ConvertPpkAutomatically")
                        .HasColumnType("INTEGER");

                    b.Property<string>("LastUsedServers")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasAnnotation("Microsoft.EntityFrameworkCore.DataEncryption.IsEncrypted", true)
                        .HasAnnotation("Microsoft.EntityFrameworkCore.DataEncryption.StorageFormat", StorageFormat.Default);

                    b.Property<int>("MaxSavedServers")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Version")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Settings");
                });

            modelBuilder.Entity("OpenSSH_GUI.Core.Lib.Credentials.ConnectionCredentials", b =>
                {
                    b.HasOne("OpenSSH_GUI.Core.Lib.Settings.SettingsFile", null)
                        .WithMany()
                        .HasForeignKey("SettingsFileId");
                });
#pragma warning restore 612, 618
        }
    }
}
